Анонимные классы позволяют реализовывать интерфейсы без наследования классом этого интерфейса.
Реализацию анонимного можно выполнить внутри другого класса что позволит выполнить псевдонаследование,
анонимному классу будут доступные поля и методы класса в котором реализовали.
Реализовать можно в статическом и не статическом блоке.
Можно либо расширить интерфейс либо реализовать, не все сразу.



Функциональный интерфейс — это интерфейс, который содержит ровно один абстрактный метод, то есть описание метода без тела.
Статические методы и методы по умолчанию при этом не в счёт, их в функциональном интерфейсе может быть сколько угодно.

А если мы создаём новый функциональный интерфейс, то важно не забыть аннотацию @FunctionalInterface.

Можно создать типа объект анонимного/лямбда выражения и передавать его к примеру в методы.

В лямбдах можно использовать переменные которые final.

Predicate
boolean test(T t); or, and, negate

Supplier
T get();

Consumer
void accept(T t);

Function
R apply(T t);